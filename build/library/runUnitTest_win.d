        module runUnitTest_win;
import tango.core.Array;
import tango.core.Atomic;
import tango.core.BitArray;
import tango.core.ByteSwap;
import tango.core.Cpuid;
import tango.core.Signal;
import tango.core.sync.Barrier;
import tango.core.sync.Condition;
import tango.core.sync.Config;
import tango.core.sync.Mutex;
import tango.core.sync.ReadWriteMutex;
import tango.core.sync.Semaphore;
import tango.core.ThreadPool;
import tango.core.Traits;
import tango.core.Tuple;
import tango.core.Vararg;
import tango.core.Variant;
import tango.core.Version;
import tango.io.Buffer;
import tango.io.Console;
import tango.io.device.Array;
import tango.io.device.BitBucket;
import tango.io.device.Conduit;
import tango.io.device.Device;
import tango.io.device.File;
import tango.io.device.FileMap;
import tango.io.device.SerialPort;
import tango.io.device.TempFile;
import tango.io.device.ThreadPipe;
import tango.io.digest.Crc32;
import tango.io.digest.Digest;
import tango.io.digest.Md2;
import tango.io.digest.Md4;
import tango.io.digest.Md5;
import tango.io.digest.MerkleDamgard;
import tango.io.digest.Sha0;
import tango.io.digest.Sha01;
import tango.io.digest.Sha1;
import tango.io.digest.Sha256;
import tango.io.digest.Sha512;
import tango.io.digest.Tiger;
import tango.io.encode.Base64;
import tango.io.File;
import tango.io.FileConduit;
import tango.io.FilePath;
import tango.io.FileScan;
import tango.io.FileSystem;
import tango.io.MappedBuffer;
import tango.io.model.IBuffer;
import tango.io.model.IConduit;
import tango.io.model.IFile;
import tango.io.Path;
import tango.io.Print;
import tango.io.protocol.Allocator;
import tango.io.protocol.EndianProtocol;
import tango.io.protocol.model.IProtocol;
import tango.io.protocol.model.IReader;
import tango.io.protocol.model.IWriter;
import tango.io.protocol.NativeProtocol;
import tango.io.protocol.PickleProtocol;
import tango.io.protocol.Reader;
import tango.io.protocol.Writer;
import tango.io.selector.AbstractSelector;
import tango.io.selector.EpollSelector;
import tango.io.selector.model.ISelector;
import tango.io.selector.PollSelector;
import tango.io.selector.Selector;
import tango.io.selector.SelectorException;
import tango.io.selector.SelectSelector;
import tango.io.Stdout;
import tango.io.stream.Buffered;
import tango.io.stream.BufferStream;
import tango.io.stream.Data;
import tango.io.stream.DataFile;
import tango.io.stream.DataFileStream;
import tango.io.stream.DataStream;
import tango.io.stream.Delimiters;
import tango.io.stream.Digester;
import tango.io.stream.DigestStream;
import tango.io.stream.Endian;
import tango.io.stream.EndianStream;
import tango.io.stream.FileStream;
import tango.io.stream.Format;
import tango.io.stream.FormatStream;
import tango.io.stream.Greedy;
import tango.io.stream.GreedyStream;
import tango.io.stream.Iterator;
import tango.io.stream.Lines;
import tango.io.stream.LineStream;
import tango.io.stream.Map;
import tango.io.stream.MapStream;
import tango.io.stream.Patterns;
import tango.io.stream.Quotes;
import tango.io.stream.Snoop;
import tango.io.stream.SnoopStream;
import tango.io.stream.Text;
import tango.io.stream.TextFile;
import tango.io.stream.TextFileStream;
import tango.io.stream.TextStream;
import tango.io.stream.Typed;
import tango.io.stream.TypedStream;
import tango.io.stream.Utf;
import tango.io.stream.UtfStream;
import tango.io.TempFile;
import tango.io.UnicodeFile;
import tango.io.vfs.FileFolder;
import tango.io.vfs.FtpFolder;
import tango.io.vfs.LinkedFolder;
import tango.io.vfs.model.Vfs;
import tango.io.vfs.VirtualFolder;
import tango.math.Bessel;
import tango.math.BigInt;
import tango.math.Bracket;
import tango.math.Elliptic;
import tango.math.ErrorFunction;
import tango.math.GammaFunction;
import tango.math.IEEE;
import tango.math.internal.BignumNoAsm;
import tango.math.internal.BignumX86;
import tango.math.internal.BiguintCore;
import tango.math.internal.Cache;
import tango.math.Math;
import tango.math.Probability;
import tango.math.random.engines.ArraySource;
import tango.math.random.engines.CMWC;
import tango.math.random.engines.KISS;
import tango.math.random.engines.KissCmwc;
import tango.math.random.engines.Sync;
import tango.math.random.engines.Twister;
import tango.math.random.engines.URandom;
import tango.math.random.ExpSource;
import tango.math.random.Kiss;
import tango.math.random.NormalSource;
import tango.math.random.Random;
import tango.math.random.Twister;
import tango.math.random.Ziggurat;
import tango.math.Random;
import tango.net.c.OpenSSL;
import tango.net.cluster.CacheInvalidatee;
import tango.net.cluster.CacheInvalidator;
import tango.net.cluster.model.ICache;
import tango.net.cluster.model.IChannel;
import tango.net.cluster.model.ICluster;
import tango.net.cluster.model.IConsumer;
import tango.net.cluster.model.IMessage;
import tango.net.cluster.NetworkAlert;
import tango.net.cluster.NetworkCache;
import tango.net.cluster.NetworkCall;
import tango.net.cluster.NetworkClient;
import tango.net.cluster.NetworkMessage;
import tango.net.cluster.NetworkQueue;
import tango.net.cluster.NetworkRegistry;
import tango.net.cluster.NetworkTask;
import tango.net.cluster.QueuedCache;
import tango.net.cluster.tina.CacheServer;
import tango.net.cluster.tina.CacheThread;
import tango.net.cluster.tina.Cluster;
import tango.net.cluster.tina.ClusterCache;
import tango.net.cluster.tina.ClusterQueue;
import tango.net.cluster.tina.ClusterServer;
import tango.net.cluster.tina.ClusterTask;
import tango.net.cluster.tina.ClusterThread;
import tango.net.cluster.tina.ClusterTypes;
import tango.net.cluster.tina.CmdParser;
import tango.net.cluster.tina.ProtocolReader;
import tango.net.cluster.tina.ProtocolWriter;
import tango.net.cluster.tina.QueueFile;
import tango.net.cluster.tina.QueueServer;
import tango.net.cluster.tina.QueueThread;
import tango.net.cluster.tina.RollCall;
import tango.net.cluster.tina.TaskServer;
import tango.net.cluster.tina.TaskThread;
import tango.net.cluster.tina.util.AbstractServer;
import tango.net.cluster.tina.util.model.IServer;
import tango.net.cluster.tina.util.ServerThread;
import tango.net.DatagramConduit;
import tango.net.ftp.FtpClient;
import tango.net.ftp.Telnet;
import tango.net.http.ChunkStream;
import tango.net.http.HttpClient;
import tango.net.http.HttpConst;
import tango.net.http.HttpCookies;
import tango.net.http.HttpGet;
import tango.net.http.HttpHeaders;
import tango.net.http.HttpParams;
import tango.net.http.HttpPost;
import tango.net.http.HttpStack;
import tango.net.http.HttpTokens;
import tango.net.http.HttpTriplet;
import tango.net.http.model.HttpParamsView;
import tango.net.InternetAddress;
import tango.net.model.UriView;
import tango.net.MulticastConduit;
import tango.net.PKI;
import tango.net.ServerSocket;
import tango.net.Socket;
import tango.net.SocketConduit;
import tango.net.SocketListener;
import tango.net.SSLServerSocket;
import tango.net.SSLSocketConduit;
import tango.net.Uri;
import tango.stdc.complex;
import tango.stdc.config;
import tango.stdc.constants.autoconf.errno;
import tango.stdc.constants.autoconf.fcntl;
import tango.stdc.constants.autoconf.machine;
import tango.stdc.constants.autoconf.socket;
import tango.stdc.constants.autoconf.sysctl;
import tango.stdc.constants.autoconf.unistd;
import tango.stdc.constants.constSupport;
import tango.sys.darwin.const.errno;
import tango.sys.darwin.const.fcntl;
import tango.sys.darwin.const.machine;
import tango.sys.darwin.const.socket;
import tango.sys.darwin.const.sysctl;
import tango.sys.darwin.const.unistd;
import tango.stdc.constants.errno;
import tango.stdc.constants.fcntl;
import tango.sys.freebsd.const.errno;
import tango.sys.freebsd.const.fcntl;
import tango.sys.freebsd.const.socket;
import tango.sys.freebsd.const.sysctl;
import tango.sys.freebsd.const.unistd;
import tango.sys.linux.const.errno;
import tango.sys.linux.const.fcntl;
import tango.sys.linux.const.socket;
import tango.sys.linux.const.sysctl;
import tango.sys.linux.const.unistd;
import tango.stdc.constants.machine;
import tango.stdc.constants.socket;
import tango.sys.solaris.const.errno;
import tango.sys.solaris.const.fcntl;
import tango.sys.solaris.const.socket;
import tango.sys.solaris.const.sysctl;
import tango.sys.solaris.const.unistd;
import tango.stdc.constants.sysctl;
import tango.stdc.constants.unistd;
import tango.sys.win32.const.errno;
import tango.sys.win32.const.fcntl;
import tango.sys.win32.const.socket;
import tango.sys.win32.const.sysctl;
import tango.sys.win32.const.unistd;
import tango.stdc.ctype;
import tango.stdc.errno;
import tango.stdc.fenv;
import tango.stdc.inttypes;
import tango.stdc.limits;
import tango.stdc.locale;
import tango.stdc.math;
import tango.stdc.signal;
import tango.stdc.stdarg;
import tango.stdc.stddef;
import tango.stdc.stdint;
import tango.stdc.stdio;
import tango.stdc.stdlib;
import tango.stdc.string;
import tango.stdc.stringz;
import tango.stdc.tgmath;
import tango.stdc.time;
import tango.stdc.wctype;
import tango.sys.Common;
import tango.sys.darwin.darwin;
import tango.sys.darwin.syscalls;
import tango.sys.Environment;
import tango.sys.freebsd.freebsd;
import tango.sys.linux.epoll;
import tango.sys.linux.linux;
import tango.sys.linux.tipc;
import tango.sys.Pipe;
import tango.sys.Process;
import tango.sys.SharedLib;
import tango.sys.solaris.solaris;
import tango.sys.unix.Tilde;
import tango.text.Ascii;
import tango.text.convert.Float;
import tango.text.convert.Format;
import tango.text.convert.Integer;
import tango.text.convert.Layout;
import tango.text.convert.Sprint;
import tango.text.convert.TimeStamp;
import tango.text.convert.UnicodeBom;
import tango.text.convert.Utf;
import tango.text.json.Json;
import tango.text.json.JsonEscape;
import tango.text.json.JsonParser;
import tango.text.locale.Collation;
import tango.text.locale.Convert;
import tango.text.locale.Core;
import tango.text.locale.Data;
import tango.text.locale.Locale;
import tango.text.locale.Parse;
import tango.text.locale.Posix;
import tango.text.Regex;
import tango.text.stream.LineIterator;
import tango.text.stream.QuoteIterator;
import tango.text.stream.RegexIterator;
import tango.text.stream.SimpleIterator;
import tango.text.stream.StreamIterator;
import tango.text.Text;
import tango.text.Unicode;
import tango.text.UnicodeData;
import tango.text.Util;
import tango.text.xml.DocEntity;
import tango.text.xml.DocPrinter;
import tango.text.xml.DocTester;
import tango.text.xml.Document;
import tango.text.xml.PullParser;
import tango.text.xml.SaxParser;
import tango.time.chrono.Calendar;
import tango.time.chrono.Gregorian;
import tango.time.chrono.GregorianBased;
import tango.time.chrono.Hebrew;
import tango.time.chrono.Hijri;
import tango.time.chrono.Japanese;
import tango.time.chrono.Korean;
import tango.time.chrono.Taiwan;
import tango.time.chrono.ThaiBuddhist;
import tango.time.Clock;
import tango.time.ISO8601;
import tango.time.StopWatch;
import tango.time.Time;
import tango.time.WallClock;
import tango.util.ArgParser;
import tango.util.Arguments;
import tango.util.collection.ArrayBag;
import tango.util.collection.ArraySeq;
import tango.util.collection.CircularSeq;
import tango.util.collection.HashMap;
import tango.util.collection.HashSet;
import tango.util.collection.impl.AbstractIterator;
import tango.util.collection.impl.BagCollection;
import tango.util.collection.impl.Cell;
import tango.util.collection.impl.CLCell;
import tango.util.collection.impl.Collection;
import tango.util.collection.impl.LLCell;
import tango.util.collection.impl.LLPair;
import tango.util.collection.impl.MapCollection;
import tango.util.collection.impl.RBCell;
import tango.util.collection.impl.RBPair;
import tango.util.collection.impl.SeqCollection;
import tango.util.collection.impl.SetCollection;
import tango.util.collection.iterator.ArrayIterator;
import tango.util.collection.iterator.FilteringIterator;
import tango.util.collection.iterator.InterleavingIterator;
import tango.util.collection.LinkMap;
import tango.util.collection.LinkSeq;
import tango.util.collection.model.Bag;
import tango.util.collection.model.BagView;
import tango.util.collection.model.Comparator;
import tango.util.collection.model.Dispenser;
import tango.util.collection.model.GuardIterator;
import tango.util.collection.model.HashParams;
import tango.util.collection.model.Iterator;
import tango.util.collection.model.Map;
import tango.util.collection.model.MapView;
import tango.util.collection.model.Seq;
import tango.util.collection.model.SeqView;
import tango.util.collection.model.Set;
import tango.util.collection.model.SetView;
import tango.util.collection.model.Sortable;
import tango.util.collection.model.SortedKeys;
import tango.util.collection.model.SortedValues;
import tango.util.collection.model.View;
import tango.util.collection.TreeBag;
import tango.util.collection.TreeMap;
import tango.util.container.CircularList;
import tango.util.container.Clink;
import tango.util.container.Container;
import tango.util.container.HashMap;
import tango.util.container.HashSet;
import tango.util.container.LinkedList;
import tango.util.container.model.IContainer;
import tango.util.container.more.CacheMap;
import tango.util.container.more.HashFile;
import tango.util.container.more.Heap;
import tango.util.container.more.Stack;
import tango.util.container.more.StackMap;
import tango.util.container.more.Vector;
import tango.util.container.RedBlack;
import tango.util.container.Slink;
import tango.util.container.SortedMap;
import tango.util.Convert;
import tango.util.log.AppendConsole;
import tango.util.log.AppendFile;
import tango.util.log.AppendFiles;
import tango.util.log.AppendMail;
import tango.util.log.AppendSocket;
import tango.util.log.Config;
import tango.util.log.ConfigProps;
import tango.util.log.LayoutChainsaw;
import tango.util.log.LayoutDate;
import tango.util.log.Log;
import tango.util.log.model.ILogger;
import tango.util.log.Trace;
import tango.util.PathUtil;
import tango.io.Stdout;
import tango.core.Runtime;

bool tangoUnitTester()
{
    uint countFailed = 0;
    uint countTotal = 1;
    Stdout ("NOTE: This is still fairly rudimentary, and will only report the").newline;
    Stdout ("    first error per module.").newline;
    foreach ( m; ModuleInfo )  // _moduleinfo_array )
    {
        if ( m.unitTest) {
            Stdout.format ("{}. Executing unittests in '{}' ", countTotal, m.name).flush;
            countTotal++;
            try {
               m.unitTest();
            }
            catch (Exception e) {
                countFailed++;
                Stdout(" - Unittest failed.").newline;
                e.writeOut(delegate void(char[]s){ Stdout(s); });
                continue;
            }
            Stdout(" - Success.").newline;
        }
    }

    Stdout.format ("{} out of {} tests failed.", countFailed, countTotal - 1).newline;
    return true;
}

static this() {
   Runtime.moduleUnitTester( &tangoUnitTester );
}

void main() {}
