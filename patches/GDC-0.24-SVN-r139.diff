Index: object.di
===================================================================
--- object.di	(revision 2482)
+++ object.di	(working copy)
@@ -47,13 +47,10 @@
     // 8:       // has constructors
     void*       deallocator;
     OffsetTypeInfo[] offTi;
-  version( DigitalMars )
-  {
     void*       defaultConstructor;
 
     static ClassInfo find(char[] classname);
     Object create();
-  }
 }
 
 struct OffsetTypeInfo
Index: lib/common/tango/core/Thread.d
===================================================================
--- lib/common/tango/core/Thread.d	(revision 2482)
+++ lib/common/tango/core/Thread.d	(working copy)
@@ -925,7 +925,8 @@
             {
                 if( !set )
                 {
-                    foreach( Thread t; sm_tbeg )
+                    //foreach( Thread t; sm_tbeg ) Bug in GDC 0.24 SVN (r139)
+                    for( Thread t = sm_tbeg; t; t = t.next )
                     {
                         t.m_local[key] = null;
                     }
@@ -952,7 +953,8 @@
         synchronized( slock )
         {
             sm_local[key] = false;
-            foreach( Thread t; sm_tbeg )
+            // foreach( Thread t; sm_tbeg ) Bug in GDC 0.24 SVN (r139)
+            for( Thread t = sm_tbeg; t; t = t.next )
             {
                 t.m_local[key] = null;
             }
Index: lib/compiler/gdc/configure
===================================================================
--- lib/compiler/gdc/configure	(revision 2482)
+++ lib/compiler/gdc/configure	(working copy)
@@ -713,6 +713,11 @@
 DCFG_EXECVPE
 DCFG_SPAWNVP
 DCFG_FWIDE
+DCFG_HAVE_GETDELIM
+DCFG_HAVE_FGETLN
+DCFG_HAVE_FGETLINE
+DCFG_HAVE_UNLOCKED_STDIO
+DCFG_HAVE_UNLOCKED_WIDE_STDIO
 DCFG_STRTOLD
 DCFG_CBRIDGE_STDIO
 DCFG_PTHREAD_SUSPEND
@@ -4030,9 +4035,6 @@
 d_gcc_ver=`$GDC -dumpversion`
 { echo "$as_me:$LINENO: result: $d_gcc_ver" >&5
 echo "${ECHO_T}$d_gcc_ver" >&6; }
-if echo "$d_gcc_ver" | grep '^3.3' > /dev/null; then
-  d_gcc_33=33
-fi
 
 
 # include dir .. need to support --enable-version-specific.. but
@@ -5226,7 +5228,7 @@
 esac
 
 case "$target_os" in
-  darwin6*) DCFG_LONG_DOUBLE_FUNCS=config/noldfuncs$d_gcc_33 ;;
+  darwin6*) DCFG_LONG_DOUBLE_FUNCS=config/noldfuncs ;;
   darwin*)  DCFG_LONG_DOUBLE_FUNCS=config/ldfuncs-darwin ;;
   linux*)
     case "$target_cpu" in
@@ -5507,7 +5509,7 @@
     else
 	DCFG_LONG_DOUBLE_FUNCS=config/noldfuncs
     fi
-    DCFG_LONG_DOUBLE_FUNCS="$DCFG_LONG_DOUBLE_FUNCS$d_gcc_33"
+    DCFG_LONG_DOUBLE_FUNCS="$DCFG_LONG_DOUBLE_FUNCS"
 fi
 
 D_EXTRA_OBJS=
@@ -6513,13 +6515,482 @@
 { echo "$as_me:$LINENO: result: $ac_cv_func_fwide" >&5
 echo "${ECHO_T}$ac_cv_func_fwide" >&6; }
 if test $ac_cv_func_fwide = yes; then
-  DCFG_FWIDE="GNU_Have_fwide"
+  DCFG_FWIDE=1
 else
-  DCFG_FWIDE=""
+  DCFG_FWIDE=0
 fi
 
 
 
+{ echo "$as_me:$LINENO: checking for getdelim" >&5
+echo $ECHO_N "checking for getdelim... $ECHO_C" >&6; }
+if test "${ac_cv_func_getdelim+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define getdelim to an innocuous variant, in case <limits.h> declares getdelim.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define getdelim innocuous_getdelim
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char getdelim (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef getdelim
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char getdelim ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_getdelim || defined __stub___getdelim
+choke me
+#endif
+
+int
+main ()
+{
+return getdelim ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_func_getdelim=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_func_getdelim=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_getdelim" >&5
+echo "${ECHO_T}$ac_cv_func_getdelim" >&6; }
+if test $ac_cv_func_getdelim = yes; then
+  DCFG_HAVE_GETDELIM=1
+else
+  DCFG_HAVE_GETDELIM=0
+fi
+
+
+
+{ echo "$as_me:$LINENO: checking for fgetln" >&5
+echo $ECHO_N "checking for fgetln... $ECHO_C" >&6; }
+if test "${ac_cv_func_fgetln+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define fgetln to an innocuous variant, in case <limits.h> declares fgetln.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define fgetln innocuous_fgetln
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char fgetln (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef fgetln
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char fgetln ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_fgetln || defined __stub___fgetln
+choke me
+#endif
+
+int
+main ()
+{
+return fgetln ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_func_fgetln=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_func_fgetln=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_fgetln" >&5
+echo "${ECHO_T}$ac_cv_func_fgetln" >&6; }
+if test $ac_cv_func_fgetln = yes; then
+  DCFG_HAVE_FGETLN=1
+else
+  DCFG_HAVE_FGETLN=0
+fi
+
+
+
+{ echo "$as_me:$LINENO: checking for fgetline" >&5
+echo $ECHO_N "checking for fgetline... $ECHO_C" >&6; }
+if test "${ac_cv_func_fgetline+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define fgetline to an innocuous variant, in case <limits.h> declares fgetline.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define fgetline innocuous_fgetline
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char fgetline (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef fgetline
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char fgetline ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_fgetline || defined __stub___fgetline
+choke me
+#endif
+
+int
+main ()
+{
+return fgetline ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_func_fgetline=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_func_fgetline=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_func_fgetline" >&5
+echo "${ECHO_T}$ac_cv_func_fgetline" >&6; }
+if test $ac_cv_func_fgetline = yes; then
+  DCFG_HAVE_FGETLINE=1
+else
+  DCFG_HAVE_FGETLINE=0
+fi
+
+
+
+DCFG_HAVE_UNLOCKED_STDIO=1
+
+
+
+
+for ac_func in flockfile funlockfile putc_unlocked getc_unlocked
+do
+as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
+{ echo "$as_me:$LINENO: checking for $ac_func" >&5
+echo $ECHO_N "checking for $ac_func... $ECHO_C" >&6; }
+if { as_var=$as_ac_var; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $ac_func innocuous_$ac_func
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $ac_func (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $ac_func
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $ac_func ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$ac_func || defined __stub___$ac_func
+choke me
+#endif
+
+int
+main ()
+{
+return $ac_func ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  eval "$as_ac_var=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	eval "$as_ac_var=no"
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+ac_res=`eval echo '${'$as_ac_var'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+if test `eval echo '${'$as_ac_var'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+else
+  DCFG_HAVE_UNLOCKED_STDIO=0
+fi
+done
+
+
+
+DCFG_HAVE_UNLOCKED_WIDE_STDIO=$DCFG_HAVE_UNLOCKED_STDIO
+
+
+for ac_func in putwc_unlocked getwc_unlocked
+do
+as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
+{ echo "$as_me:$LINENO: checking for $ac_func" >&5
+echo $ECHO_N "checking for $ac_func... $ECHO_C" >&6; }
+if { as_var=$as_ac_var; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $ac_func innocuous_$ac_func
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $ac_func (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $ac_func
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $ac_func ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$ac_func || defined __stub___$ac_func
+choke me
+#endif
+
+int
+main ()
+{
+return $ac_func ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  eval "$as_ac_var=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	eval "$as_ac_var=no"
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+fi
+ac_res=`eval echo '${'$as_ac_var'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+if test `eval echo '${'$as_ac_var'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+else
+  DCFG_HAVE_UNLOCKED_WIDE_STDIO=0
+fi
+done
+
+
+
 { echo "$as_me:$LINENO: checking for strtold" >&5
 echo $ECHO_N "checking for strtold... $ECHO_C" >&6; }
 if test "${ac_cv_func_strtold+set}" = set; then
@@ -10029,6 +10500,11 @@
 DCFG_EXECVPE!$DCFG_EXECVPE$ac_delim
 DCFG_SPAWNVP!$DCFG_SPAWNVP$ac_delim
 DCFG_FWIDE!$DCFG_FWIDE$ac_delim
+DCFG_HAVE_GETDELIM!$DCFG_HAVE_GETDELIM$ac_delim
+DCFG_HAVE_FGETLN!$DCFG_HAVE_FGETLN$ac_delim
+DCFG_HAVE_FGETLINE!$DCFG_HAVE_FGETLINE$ac_delim
+DCFG_HAVE_UNLOCKED_STDIO!$DCFG_HAVE_UNLOCKED_STDIO$ac_delim
+DCFG_HAVE_UNLOCKED_WIDE_STDIO!$DCFG_HAVE_UNLOCKED_WIDE_STDIO$ac_delim
 DCFG_STRTOLD!$DCFG_STRTOLD$ac_delim
 DCFG_CBRIDGE_STDIO!$DCFG_CBRIDGE_STDIO$ac_delim
 DCFG_PTHREAD_SUSPEND!$DCFG_PTHREAD_SUSPEND$ac_delim
@@ -10048,7 +10524,7 @@
 LTLIBOBJS!$LTLIBOBJS$ac_delim
 _ACEOF
 
-  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 26; then
+  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 31; then
     break
   elif $ac_last_try; then
     { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
Index: lib/compiler/gdc/Makefile.in
===================================================================
--- lib/compiler/gdc/Makefile.in	(revision 2482)
+++ lib/compiler/gdc/Makefile.in	(working copy)
@@ -118,6 +118,11 @@
 DCFG_EXP2_LOG2 = @DCFG_EXP2_LOG2@
 DCFG_FWIDE = @DCFG_FWIDE@
 DCFG_GETPWNAM_R = @DCFG_GETPWNAM_R@
+DCFG_HAVE_FGETLINE = @DCFG_HAVE_FGETLINE@
+DCFG_HAVE_FGETLN = @DCFG_HAVE_FGETLN@
+DCFG_HAVE_GETDELIM = @DCFG_HAVE_GETDELIM@
+DCFG_HAVE_UNLOCKED_STDIO = @DCFG_HAVE_UNLOCKED_STDIO@
+DCFG_HAVE_UNLOCKED_WIDE_STDIO = @DCFG_HAVE_UNLOCKED_WIDE_STDIO@
 DCFG_MMAP = @DCFG_MMAP@
 DCFG_NAN = @DCFG_NAN@
 DCFG_NEARBYINT = @DCFG_NEARBYINT@
@@ -252,6 +257,7 @@
     cmain.o \
     critical.o \
     dgccmain2.o \
+    gcc/builtins.o \
     genobj.o \
     invariant.o \
     lifetime.o \
Index: lib/compiler/gdc/phobos-ver-syms.in
===================================================================
--- lib/compiler/gdc/phobos-ver-syms.in	(revision 2482)
+++ lib/compiler/gdc/phobos-ver-syms.in	(working copy)
@@ -9,7 +9,6 @@
 @DCFG_EXP2_LOG2@
 @DCFG_EXECVPE@
 @DCFG_SPAWNVP@
-@DCFG_FWIDE@
 @DCFG_STRTOLD@
 @DCFG_SA_LEN@
 @DCFG_CBRIDGE_STDIO@
Index: lib/compiler/gdc/gcc/cbridge_time.c
===================================================================
--- lib/compiler/gdc/gcc/cbridge_time.c	(revision 2482)
+++ lib/compiler/gdc/gcc/cbridge_time.c	(working copy)
@@ -9,12 +9,18 @@
     time(&t);    
     p_tm = localtime(&t);	/* this will set timezone */
 
-#ifdef HAVE_TM_GMTOFF_AND_ZONE
-    return p_tm->tm_gmtoff;
-#elif defined(HAVE_TIMEZONE)
+#if defined(HAVE_TIMEZONE)
     return timezone;
 #elif defined(HAVE__TIMEZONE)
     return _timezone;
+#elif HAVE_TM_GMTOFF_AND_ZONE
+    /* std.date expects this value to not include
+       the daylight saving time offset. */
+    if (p_tm->tm_isdst)
+	/* std.date assumes daylight saving time is a one hour offset,
+	   so no attempt is made determine the correct offset */
+	return p_tm->tm_gmtoff - 3600;
+    return p_tm->tm_gmtoff;
 #else
     return (time_t) 0;
 #endif
Index: lib/compiler/gdc/frag-ac.in
===================================================================
--- lib/compiler/gdc/frag-ac.in	(revision 2482)
+++ lib/compiler/gdc/frag-ac.in	(working copy)
@@ -4,4 +4,12 @@
 
 @DCFG_SQRTF@
 
+//   C stdio config for std.stdio
+const bool Have_fwide = @DCFG_FWIDE@;
+const bool Have_getdelim = @DCFG_HAVE_GETDELIM@;
+const bool Have_fgetln = @DCFG_HAVE_FGETLN@;
+const bool Have_fgetline = @DCFG_HAVE_FGETLINE@;
+const bool Have_Unlocked_Stdio = @DCFG_HAVE_UNLOCKED_STDIO@;
+const bool Have_Unlocked_Wide_Stdio = @DCFG_HAVE_UNLOCKED_WIDE_STDIO@;
+
 // ...frags-ac.in
Index: lib/compiler/gdc/configure.in
===================================================================
--- lib/compiler/gdc/configure.in	(revision 2482)
+++ lib/compiler/gdc/configure.in	(working copy)
@@ -189,9 +189,6 @@
 AC_MSG_CHECKING([D GCC version])
 d_gcc_ver=`$GDC -dumpversion`
 AC_MSG_RESULT($d_gcc_ver)
-if echo "$d_gcc_ver" | grep '^3.3' > /dev/null; then
-  d_gcc_33=33
-fi
 
 dnl Eventually need to include everything from libstdc++-v3/acinclude.m4
 dnl (# Default case for install directory for include files.) and on
@@ -259,7 +256,7 @@
 esac
 
 case "$target_os" in
-  darwin6*) DCFG_LONG_DOUBLE_FUNCS=config/noldfuncs$d_gcc_33 ;;
+  darwin6*) DCFG_LONG_DOUBLE_FUNCS=config/noldfuncs ;;
   darwin*)  DCFG_LONG_DOUBLE_FUNCS=config/ldfuncs-darwin ;;
   linux*)
     case "$target_cpu" in
@@ -282,7 +279,7 @@
     else
 	DCFG_LONG_DOUBLE_FUNCS=config/noldfuncs
     fi
-    DCFG_LONG_DOUBLE_FUNCS="$DCFG_LONG_DOUBLE_FUNCS$d_gcc_33"
+    DCFG_LONG_DOUBLE_FUNCS="$DCFG_LONG_DOUBLE_FUNCS"
 fi
 
 D_EXTRA_OBJS=
@@ -376,9 +373,27 @@
 AC_CHECK_FUNC(spawnvp,DCFG_SPAWNVP="",DCFG_SPAWNVP="GNU_Need_spawnvp")
 AC_SUBST(DCFG_SPAWNVP)
 
-AC_CHECK_FUNC(fwide,DCFG_FWIDE="GNU_Have_fwide",DCFG_FWIDE="")
+AC_CHECK_FUNC(fwide,[DCFG_FWIDE=1],[DCFG_FWIDE=0])
 AC_SUBST(DCFG_FWIDE)
 
+AC_CHECK_FUNC(getdelim,[DCFG_HAVE_GETDELIM=1],[DCFG_HAVE_GETDELIM=0])
+AC_SUBST(DCFG_HAVE_GETDELIM)
+
+AC_CHECK_FUNC(fgetln,[DCFG_HAVE_FGETLN=1],[DCFG_HAVE_FGETLN=0])
+AC_SUBST(DCFG_HAVE_FGETLN)
+
+AC_CHECK_FUNC(fgetline,[DCFG_HAVE_FGETLINE=1],[DCFG_HAVE_FGETLINE=0])
+AC_SUBST(DCFG_HAVE_FGETLINE)
+
+DCFG_HAVE_UNLOCKED_STDIO=1
+AC_CHECK_FUNCS([flockfile funlockfile putc_unlocked getc_unlocked],
+	[],[DCFG_HAVE_UNLOCKED_STDIO=0])
+AC_SUBST(DCFG_HAVE_UNLOCKED_STDIO)
+
+DCFG_HAVE_UNLOCKED_WIDE_STDIO=$DCFG_HAVE_UNLOCKED_STDIO
+AC_CHECK_FUNCS([putwc_unlocked getwc_unlocked], [],[DCFG_HAVE_UNLOCKED_WIDE_STDIO=0])
+AC_SUBST(DCFG_HAVE_UNLOCKED_WIDE_STDIO)
+
 AC_CHECK_FUNC(strtold,DCFG_STRTOLD="GNU_Have_strtold",DCFG_STRTOLD="")
 AC_SUBST(DCFG_STRTOLD)
 
Index: lib/compiler/gdc/genobj.d
===================================================================
--- lib/compiler/gdc/genobj.d	(revision 2482)
+++ lib/compiler/gdc/genobj.d	(working copy)
@@ -115,6 +115,23 @@
         return cast(int)(this is o);
     }
 
+    /******
+     * Create instance of class specified by classname.
+     * The class must either have no constructors or have
+     * a default constructor.
+     * Returns:
+     *	null if failed
+     */
+    static Object factory(char[] classname)
+    {
+	auto ci = ClassInfo.find(classname);
+	if (ci)
+	{
+	    return ci.create();
+	}
+	return null;
+    }
+
     interface Monitor
     {
         void lock();
@@ -156,7 +173,6 @@
     //  8:                      // has constructors
     void*       deallocator;
     OffsetTypeInfo[] offTi;
-/+
     void function(Object) defaultConstructor;   // default Constructor
 
     /**
@@ -192,7 +208,6 @@
         }
         return o;
     }
-+/
 }
 
 /**
@@ -900,6 +915,33 @@
     }
 }
 
+/+ This is in r139, not sure if it should be here
++ class TypeInfo_Const : TypeInfo
++ {
++     char[] toString() { return "const " ~ base.toString(); }
++ 
++     int opEquals(Object o) { return base.opEquals(o); }
++     hash_t getHash(void *p) { return base.getHash(p); }
++     int equals(void *p1, void *p2) { return base.equals(p1, p2); }
++     int compare(void *p1, void *p2) { return base.compare(p1, p2); }
++     size_t tsize() { return base.tsize(); }
++     void swap(void *p1, void *p2) { return base.swap(p1, p2); }
++ 
++     TypeInfo next() { return base.next(); }
++     uint flags() { return base.flags(); }
++     void[] init() { return base.init(); }
++ 
++     TypeInfo base;
++ }
++ 
++ class TypeInfo_Invariant : TypeInfo_Const
++ {
++     char[] toString() { return "invariant " ~ base.toString(); }
++ }
++ 
++ 
++/
+
 class Exception : Object
 {
     char[]      msg;
Index: lib/compiler/gdc/config.h.in
===================================================================
--- lib/compiler/gdc/config.h.in	(revision 2482)
+++ lib/compiler/gdc/config.h.in	(working copy)
@@ -6,9 +6,21 @@
 /* Define to 1 if you have the `exp2' function. */
 #undef HAVE_EXP2
 
+/* Define to 1 if you have the `flockfile' function. */
+#undef HAVE_FLOCKFILE
+
 /* Define to 1 fpclassify and signbit are available */
 #undef HAVE_FP_CLASSIFY_SIGNBIT
 
+/* Define to 1 if you have the `funlockfile' function. */
+#undef HAVE_FUNLOCKFILE
+
+/* Define to 1 if you have the `getc_unlocked' function. */
+#undef HAVE_GETC_UNLOCKED
+
+/* Define to 1 if you have the `getwc_unlocked' function. */
+#undef HAVE_GETWC_UNLOCKED
+
 /* Define to 1 if you have the <inttypes.h> header file. */
 #undef HAVE_INTTYPES_H
 
@@ -45,6 +57,12 @@
 /* Define to 1 if the system has the type `pthread_spinlock_t'. */
 #undef HAVE_PTHREAD_SPINLOCK_T
 
+/* Define to 1 if you have the `putc_unlocked' function. */
+#undef HAVE_PUTC_UNLOCKED
+
+/* Define to 1 if you have the `putwc_unlocked' function. */
+#undef HAVE_PUTWC_UNLOCKED
+
 /* Define to 1 if you have the <semaphore.h> header file. */
 #undef HAVE_SEMAPHORE_H
 
Index: lib/compiler/gdc/aaA.d
===================================================================
--- lib/compiler/gdc/aaA.d	(revision 2482)
+++ lib/compiler/gdc/aaA.d	(working copy)
@@ -101,15 +101,6 @@
 struct AA
 {
     BB* a;
-    version (X86_64)
-    {
-    }
-    else
-    {
-        // This is here only to retain binary compatibility with the
-        // old way we did AA's. Should eventually be removed.
-        //int reserved;
-    }
 }
 
 /**********************************
@@ -762,3 +753,94 @@
     }
     return result;
 }
+
+
+/***********************************
+ * Construct an associative array of type ti from
+ * length pairs of key/value pairs.
+ */
+
+extern (C)
+BB* _d_assocarrayliteralTp(TypeInfo_AssociativeArray ti, size_t length,
+    void *keys, void *values)
+{
+    auto valuesize = ti.next.tsize();		// value size
+    auto keyti = ti.key;
+    auto keysize = keyti.tsize();		// key size
+    BB* result;
+
+    //printf("_d_assocarrayliteralT(keysize = %d, valuesize = %d, length = %d)\n", keysize, valuesize, length);
+    //writefln("tivalue = %s", ti.next.classinfo.name);
+    if (length == 0 || valuesize == 0 || keysize == 0)
+    {
+	;
+    }
+    else
+    {
+	//va_list q;
+	//va_start!(size_t)(q, length);
+	void * qkey = keys;
+	void * qval = values;
+
+	result = new BB();
+	size_t i;
+
+	for (i = 0; i < prime_list.length - 1; i++)
+	{
+	    if (length <= prime_list[i])
+		break;
+	}
+	auto len = prime_list[i];
+	result.b = new aaA*[len];
+
+	size_t keystacksize   = (keysize   + int.sizeof - 1) & ~(int.sizeof - 1);
+	size_t valuestacksize = (valuesize + int.sizeof - 1) & ~(int.sizeof - 1);
+
+	size_t keytsize = aligntsize(keysize);
+
+	for (size_t j = 0; j < length; j++)
+	{   void* pkey = qkey;
+	    //q += keystacksize;
+	    qkey += keysize;
+	    void* pvalue = qval;
+	    //q += valuestacksize;
+	    qval += valuesize;
+	    aaA* e;
+
+	    auto key_hash = keyti.getHash(pkey);
+	    //printf("hash = %d\n", key_hash);
+	    i = key_hash % len;
+	    auto pe = &result.b[i];
+	    while (1)
+	    {
+		e = *pe;
+		if (!e)
+		{
+		    // Not found, create new elem
+		    //printf("create new one\n");
+		    e = cast(aaA *) cast(void*) new void[aaA.sizeof + keytsize + valuesize];
+		    memcpy(e + 1, pkey, keysize);
+		    e.hash = key_hash;
+		    *pe = e;
+		    result.nodes++;
+		    break;
+		}
+		if (key_hash == e.hash)
+		{
+		    auto c = keyti.compare(pkey, e + 1);
+		    if (c == 0)
+			break;
+		    pe = (c < 0) ? &e.left : &e.right;
+		}
+		else
+		    pe = (key_hash < e.hash) ? &e.left : &e.right;
+	    }
+	    memcpy(cast(void *)(e + 1) + keytsize, pvalue, valuesize);
+	}
+
+	//va_end(q);
+    }
+    return result;
+}
+
+
Index: lib/compiler/gdc/config/unix-mid
===================================================================
--- lib/compiler/gdc/config/unix-mid	(revision 2482)
+++ lib/compiler/gdc/config/unix-mid	(working copy)
@@ -292,7 +292,6 @@
     size_t confstr(int, char*, size_t);
     int creat(char*, mode_t);
     char* ctermid(char*);
-    int dirfd(DIR*);
     char* dirname(char*);
     int fattach(int, char*);
     int fchmod(int, mode_t);
@@ -300,8 +299,6 @@
     int ffs(int);
     int fmtmsg(int, char*, int, char*, char*, char*);
     int fpathconf(int, int);
-    int fseeko(FILE*, off_t, int);
-    off_t ftello(FILE*);
 
     extern char** environ;
 
Index: lib/compiler/gdc/config/noldfuncs33
===================================================================
--- lib/compiler/gdc/config/noldfuncs33	(revision 2482)
+++ lib/compiler/gdc/config/noldfuncs33	(working copy)
@@ -1,135 +0,0 @@
-// If long double functions are present, just alias
-// to the __builtin_ version.  This may not do the right thing (TODO)
-
-// GCC 3.3 doesn't have some of these builtins
-//
-extern (C) {
-double acos(double);
-alias acos acosl;
-double asin(double);
-alias asin asinl;
-double atan(double);
-alias atan atanl;
-double atan2(double, double);
-alias atan2 atan2l;
-
-alias __builtin_cos cosl;
-alias __builtin_sin sinl;
-
-double tan(double);
-alias tan tanl;
-double acosh(double);
-alias acosh acoshl;
-double asinh(double);
-alias asinh asinhl;
-double atanh(double);
-alias atanh atanhl;
-double cosh(double);
-alias cosh coshl;
-double sinh(double);
-alias sinh sinhl;
-double tanh(double);
-alias tanh tanhl;
-
-alias __builtin_exp expl;
-
-double exp2(double);
-alias exp2 exp2l;
-double expm1(double);
-alias expm1 expm1l;
-double frexp(double, int*);
-alias frexp frexpl;
-int ilogb(double);
-alias ilogb ilogbl;
-double ldexp(double, int);
-alias ldexp ldexpl;
-
-alias __builtin_log logl;
-
-double log10(double);
-alias log10 log10l;
-double log1p(double);
-alias log1p log1pl;
-double log2(double);
-alias log2 log2l;
-double logb(double);
-alias logb logbl;
-
-double modf(double, double*);
-double modfl(real a, real* b)
-{
-  double c;
-  double result = modf(a, & c);
-  *b = c;
-  return result;
-}
-
-double scalbn(double, int);
-alias scalbn scalbnl;
-double scalbln(double, int); // C long int
-alias scalbln scalblnl;
-double cbrt(double);
-alias cbrt cbrtl;
-double fabs(double);
-alias fabs fabsl;
-double hypot(double, double);
-alias hypot hypotl;
-double pow(double, double);
-alias pow powl;
-
-alias __builtin_sqrt sqrtl;
-
-double erf(double);
-alias erf erfl;
-double erfc(double);
-alias erfc erfcl;
-double lgamma(double);
-alias lgamma lgammal;
-double tgamma(double);
-alias tgamma tgammal;
-double ceil(double);
-alias ceil ceill;
-double floor(double);
-alias floor floorl;
-double nearbyint(double);
-alias nearbyint nearbyintl;
-double rint(double);
-alias rint rintl;
-int lrint(double); // C long int
-alias lrint lrintl;
-long llrint(double);
-alias llrint llrintl;
-double round(double);
-alias round roundl;
-int lround(double); // C long int
-alias lround lroundl;
-long llround(double);
-alias llround llroundl;
-double trunc(double);
-alias trunc truncl;
-double fmod(double, double);
-alias fmod fmodl;
-double remainder(double, double);
-alias remainder remainderl;
-double remquo(double, double, int*);
-alias remquo remquol;
-double copysign(double, double);
-alias copysign copysignl;
-
-alias __builtin_nan nanl;
-
-double nextafter(double, double);
-alias nextafter nextafterl;
-alias nextafter nexttowardl;
-double fdim(double, double);
-alias fdim fdiml;
-double fmax(double, double);
-alias fmax fmaxl;
-double fmin(double, double);
-alias fmin fminl;
-double fma(double, double, double);
-alias fma fmal;
-
-alias __builtin_sqrt sqrt;
-//alias __builtin_sqrtf sqrtf;// needs an extra step
-}
Index: lib/compiler/gdc/config/ldfuncs33
===================================================================
--- lib/compiler/gdc/config/ldfuncs33	(revision 2482)
+++ lib/compiler/gdc/config/ldfuncs33	(working copy)
@@ -1,78 +0,0 @@
-// If long double functions are present, just alias
-// to the __builtin_ version.  This may not do the right thing (TODO)
-
-// GCC 3.3 doesn't have some of these builtins
-//
-extern (C) {
-real acosl(real);
-real asinl(real);
-real atanl(real);
-real atan2l(real, real);
-
-alias __builtin_cosl cosl;
-alias __builtin_sinl sinl;
-
-real tanl(real);
-real acoshl(real);
-real asinhl(real);
-real atanhl(real);
-real coshl(real);
-real sinhl(real);
-real tanhl(real);
-
-alias __builtin_expl expl;
-
-real exp2l(real);
-real expm1l(real);
-real frexpl(real, int*);
-int ilogbl(real);
-real ldexpl(real, int);
-
-alias __builtin_logl logl;
-
-real log10l(real);
-real log1pl(real);
-real log2l(real);
-real logbl(real);
-real modfl(real, real*);
-real scalbnl(real, int);
-real scalblnl(real, Clong_t);
-real cbrtl(real);
-real fabsl(real);
-real hypotl(real, real);
-real powl(real, real);
-
-alias __builtin_sqrtl sqrtl;
-
-real erfl(real);
-real erfcl(real);
-real lgammal(real);
-real tgammal(real);
-real ceill(real);
-real floorl(real);
-real nearbyintl(real);
-real rintl(real);
-Clong_t lrintl(real);
-long llrintl(real);
-real roundl(real);
-Clong_t lroundl(real);
-long llroundl(real);
-real truncl(real);
-real fmodl(real, real);
-real remainderl(real, real);
-real remquol(real, real, int*);
-real copysignl(real, real);
-
-//alias __builtin_nanl nanl;//
-real nanl(char *);
-
-real nextafterl(real, real);
-real nexttowardl(real, real);
-real fdiml(real, real);
-real fmaxl(real, real);
-real fminl(real, real);
-real fmal(real, real, real);
-
-alias __builtin_sqrt sqrt;
-//alias __builtin_sqrtf sqrtf;// needs an extra step
-}
Index: lib/compiler/gdc/Makefile.am
===================================================================
--- lib/compiler/gdc/Makefile.am	(revision 2482)
+++ lib/compiler/gdc/Makefile.am	(working copy)
@@ -80,6 +80,7 @@
     cmain.o \
     critical.o \
     dgccmain2.o \
+    gcc/builtins.o \
     genobj.o \
     invariant.o \
     lifetime.o \
