/*******************************************************************************

*******************************************************************************/

module tango.text.convert.model.IFormatService;


/*******************************************************************************

*******************************************************************************/

interface IFormatService
{
        /**********************************************************************

                $(ANCHOR IFormatService_getFormat)
                
                Retrieves an object that supports formatting for the
                specified _type.
                Returns: The current instance if type is the same _type
                as the current instance; otherwise, null.
                Params: type = An object that specifies the _type of
                formatting to retrieve.

        **********************************************************************/

        abstract Object getFormat (TypeInfo type);

}

/*******************************************************************************

*******************************************************************************/

abstract class NumericTextAttributes(T)
{
        /**********************************************************************

        **********************************************************************/

        abstract T[] negativeSign ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] positiveSign ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] numberDecimalSeparator ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] numberGroupSeparator ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] currencyGroupSeparator ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] currencyDecimalSeparator ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] currencySymbol ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] negativeInfinitySymbol ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] positiveInfinitySymbol ();

        /**********************************************************************

        **********************************************************************/

        abstract T[] nanSymbol ();
}


/******************************************************************************

*******************************************************************************/

abstract class NumericAttributes
{
        /**********************************************************************

        **********************************************************************/

        abstract int numberDecimalDigits ();

        /**********************************************************************

        **********************************************************************/

        abstract int[] numberGroupSizes ();

        /**********************************************************************

        **********************************************************************/

        abstract int numberNegativePattern ();

        /**********************************************************************

        **********************************************************************/

        abstract int currencyNegativePattern ();

        /**********************************************************************

        **********************************************************************/

        abstract int currencyPositivePattern ();

        /**********************************************************************

        **********************************************************************/

        abstract int[] currencyGroupSizes ();

        /**********************************************************************

        **********************************************************************/

        abstract int currencyDecimalDigits ();

        /**********************************************************************

        **********************************************************************/

        abstract NumericTextAttributes!(char) utf8();

        /**********************************************************************

        **********************************************************************/

        abstract NumericTextAttributes!(wchar) utf16();

        /**********************************************************************

        **********************************************************************/

        abstract NumericTextAttributes!(dchar) utf32();
}
