#if (defined(_WINDOWS)||defined(WIN32))
#define UNISTD_SKIP_ALL
#else
#include <unistd.h>
#endif

xxx start xxx
module tango.stdc.constants.unistd;

#ifndef UNISTD_SKIP_ALL
    enum __XYX__STDIN_FILENO  = STDIN_FILENO;
    enum __XYX__STDOUT_FILENO = STDOUT_FILENO;
    enum __XYX__STDERR_FILENO = STDERR_FILENO;

    enum __XYX__F_OK          = F_OK;
    enum __XYX__R_OK          = R_OK;
    enum __XYX__W_OK          = W_OK;
    enum __XYX__X_OK          = X_OK;

    enum __XYX__F_ULOCK       = F_ULOCK;
    enum __XYX__F_LOCK        = F_LOCK ;
    enum __XYX__F_TLOCK       = F_TLOCK;
    enum __XYX__F_TEST        = F_TEST ;

    enum __XYX___POSIX_VERSION     = _POSIX_VERSION    ;
    enum __XYX___POSIX2_VERSION    = _POSIX2_VERSION   ;
#ifdef _POSIX2_C_VERSION
    enum __XYX___POSIX2_C_VERSION  = _POSIX2_C_VERSION ;
#endif
    enum __XYX___XOPEN_VERSION     = _XOPEN_VERSION    ;
    enum __XYX___XOPEN_XCU_VERSION = _XOPEN_XCU_VERSION;

    // posix.1
    enum __XYX___PC_LINK_MAX           = _PC_LINK_MAX;
    enum __XYX___PC_MAX_CANON          = _PC_MAX_CANON;
    enum __XYX___PC_MAX_INPUT          = _PC_MAX_INPUT;
    enum __XYX___PC_NAME_MAX           = _PC_NAME_MAX;
    enum __XYX___PC_PATH_MAX           = _PC_PATH_MAX;
    enum __XYX___PC_PIPE_BUF           = _PC_PIPE_BUF;
    enum __XYX___PC_CHOWN_RESTRICTED   = _PC_CHOWN_RESTRICTED;
    enum __XYX___PC_NO_TRUNC           = _PC_NO_TRUNC;
    enum __XYX___PC_VDISABLE           = _PC_VDISABLE;
    enum __XYX___PC_SYNC_IO            = _PC_SYNC_IO;
    enum __XYX___PC_ASYNC_IO           = _PC_ASYNC_IO;
    enum __XYX___PC_PRIO_IO            = _PC_PRIO_IO;
#ifdef _PC_SOCK_MAXBUF
    enum __XYX___PC_SOCK_MAXBUF        = _PC_SOCK_MAXBUF;
#endif
    enum __XYX___PC_FILESIZEBITS       = _PC_FILESIZEBITS;
    enum __XYX___PC_REC_INCR_XFER_SIZE = _PC_REC_INCR_XFER_SIZE;
    enum __XYX___PC_REC_MAX_XFER_SIZE  = _PC_REC_MAX_XFER_SIZE;
    enum __XYX___PC_REC_MIN_XFER_SIZE  = _PC_REC_MIN_XFER_SIZE;
    enum __XYX___PC_REC_XFER_ALIGN     = _PC_REC_XFER_ALIGN;
    enum __XYX___PC_ALLOC_SIZE_MIN     = _PC_ALLOC_SIZE_MIN;
    enum __XYX___PC_SYMLINK_MAX        = _PC_SYMLINK_MAX;
    enum __XYX___PC_2_SYMLINKS         = _PC_2_SYMLINKS;

    // posix.2
    enum __XYX___CS_PATH = _CS_PATH;

#ifdef _CS_GNU_LIBC_VERSION
    enum __XYX___CS_GNU_LIBC_VERSION = _CS_GNU_LIBC_VERSION;
#endif
#ifdef _CS_GNU_LIBPTHREAD_VERSION
    enum __XYX___CS_GNU_LIBPTHREAD_VERSION = _CS_GNU_LIBPTHREAD_VERSION;
#endif

#ifdef _LFS64_LARGEFILE
    enum __XYX___LFS64_LARGEFILE=_LFS64_LARGEFILE;
#endif
#ifdef _LFS64_STDIO
    enum __XYX___LFS64_STDIO=_LFS64_STDIO;
#endif


#ifdef _CS_LFS_CFLAGS
    enum __XYX___CS_LFS_CFLAGS      = _CS_LFS_CFLAGS;
    enum __XYX___CS_LFS_LDFLAGS     = _CS_LFS_LDFLAGS;
    enum __XYX___CS_LFS_LIBS        = _CS_LFS_LIBS;
    enum __XYX___CS_LFS_LINTFLAGS   = _CS_LFS_LINTFLAGS;
#endif
#ifdef _CS_LFS64_CFLAGS
    enum __XYX___CS_LFS64_CFLAGS    = _CS_LFS64_CFLAGS;
    enum __XYX___CS_LFS64_LDFLAGS   = _CS_LFS64_LDFLAGS;
    enum __XYX___CS_LFS64_LIBS      = _CS_LFS64_LIBS;
    enum __XYX___CS_LFS64_LINTFLAGS = _CS_LFS64_LINTFLAGS;
#endif

#ifdef _CS_V6_WIDTH_RESTRICTED_ENVS
    enum __XYX___CS_V6_WIDTH_RESTRICTED_ENVS = _CS_V6_WIDTH_RESTRICTED_ENVS;
#endif

    enum __XYX___CS_XBS5_ILP32_OFF32_CFLAGS     = _CS_XBS5_ILP32_OFF32_CFLAGS;
    enum __XYX___CS_XBS5_ILP32_OFF32_LDFLAGS    = _CS_XBS5_ILP32_OFF32_LDFLAGS;
    enum __XYX___CS_XBS5_ILP32_OFF32_LIBS       = _CS_XBS5_ILP32_OFF32_LIBS;
    enum __XYX___CS_XBS5_ILP32_OFF32_LINTFLAGS  = _CS_XBS5_ILP32_OFF32_LINTFLAGS;
    enum __XYX___CS_XBS5_ILP32_OFFBIG_CFLAGS    = _CS_XBS5_ILP32_OFFBIG_CFLAGS;
    enum __XYX___CS_XBS5_ILP32_OFFBIG_LDFLAGS   = _CS_XBS5_ILP32_OFFBIG_LDFLAGS;
    enum __XYX___CS_XBS5_ILP32_OFFBIG_LIBS      = _CS_XBS5_ILP32_OFFBIG_LIBS;
    enum __XYX___CS_XBS5_ILP32_OFFBIG_LINTFLAGS = _CS_XBS5_ILP32_OFFBIG_LINTFLAGS;
    enum __XYX___CS_XBS5_LP64_OFF64_CFLAGS      = _CS_XBS5_LP64_OFF64_CFLAGS;
    enum __XYX___CS_XBS5_LP64_OFF64_LDFLAGS     = _CS_XBS5_LP64_OFF64_LDFLAGS;
    enum __XYX___CS_XBS5_LP64_OFF64_LIBS        = _CS_XBS5_LP64_OFF64_LIBS;
    enum __XYX___CS_XBS5_LP64_OFF64_LINTFLAGS   = _CS_XBS5_LP64_OFF64_LINTFLAGS;
    enum __XYX___CS_XBS5_LPBIG_OFFBIG_CFLAGS    = _CS_XBS5_LPBIG_OFFBIG_CFLAGS;
    enum __XYX___CS_XBS5_LPBIG_OFFBIG_LDFLAGS   = _CS_XBS5_LPBIG_OFFBIG_LDFLAGS;
    enum __XYX___CS_XBS5_LPBIG_OFFBIG_LIBS      = _CS_XBS5_LPBIG_OFFBIG_LIBS;
    enum __XYX___CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS;

#ifdef _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
    enum __XYX___CS_POSIX_V6_ILP32_OFF32_LINTFLAGS  = _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS;
#endif
    enum __XYX___CS_POSIX_V6_ILP32_OFF32_CFLAGS     = _CS_POSIX_V6_ILP32_OFF32_CFLAGS;
    enum __XYX___CS_POSIX_V6_ILP32_OFF32_LDFLAGS    = _CS_POSIX_V6_ILP32_OFF32_LDFLAGS;
    enum __XYX___CS_POSIX_V6_ILP32_OFF32_LIBS       = _CS_POSIX_V6_ILP32_OFF32_LIBS;
    enum __XYX___CS_POSIX_V6_ILP32_OFFBIG_CFLAGS    = _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS;
    enum __XYX___CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS   = _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS;
    enum __XYX___CS_POSIX_V6_ILP32_OFFBIG_LIBS      = _CS_POSIX_V6_ILP32_OFFBIG_LIBS;
#ifdef _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
    enum __XYX___CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS;
#endif
#ifdef _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
    enum __XYX___CS_POSIX_V6_LP64_OFF64_LINTFLAGS   = _CS_POSIX_V6_LP64_OFF64_LINTFLAGS;
#endif
    enum __XYX___CS_POSIX_V6_LP64_OFF64_CFLAGS      = _CS_POSIX_V6_LP64_OFF64_CFLAGS;
    enum __XYX___CS_POSIX_V6_LP64_OFF64_LDFLAGS     = _CS_POSIX_V6_LP64_OFF64_LDFLAGS;
    enum __XYX___CS_POSIX_V6_LP64_OFF64_LIBS        = _CS_POSIX_V6_LP64_OFF64_LIBS;
#ifdef _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
    enum __XYX___CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS;
#endif
    enum __XYX___CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS    = _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS;
    enum __XYX___CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS   = _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS;
    enum __XYX___CS_POSIX_V6_LPBIG_OFFBIG_LIBS      = _CS_POSIX_V6_LPBIG_OFFBIG_LIBS;


#ifdef _SC_PII
    enum __XYX___SC_PII                           = _SC_PII;
    enum __XYX___SC_PII_XTI                       = _SC_PII_XTI;
    enum __XYX___SC_PII_SOCKET                    = _SC_PII_SOCKET;
    enum __XYX___SC_PII_INTERNET                  = _SC_PII_INTERNET;
    enum __XYX___SC_PII_OSI                       = _SC_PII_OSI;
    enum __XYX___SC_POLL                          = _SC_POLL;
    enum __XYX___SC_PII_INTERNET_STREAM           = _SC_PII_INTERNET_STREAM;
    enum __XYX___SC_PII_INTERNET_DGRAM            = _SC_PII_INTERNET_DGRAM;
    enum __XYX___SC_PII_OSI_COTS                  = _SC_PII_OSI_COTS;
    enum __XYX___SC_PII_OSI_CLTS                  = _SC_PII_OSI_CLTS;
    enum __XYX___SC_PII_OSI_M                     = _SC_PII_OSI_M;
#endif
#ifdef _SC_SELECT
    enum __XYX___SC_SELECT                        = _SC_SELECT;
#endif
#ifdef _SC_UIO_MAXIOV
    enum __XYX___SC_UIO_MAXIOV                    = _SC_UIO_MAXIOV;
#endif
#ifdef _SC_IOV_MAX
    enum __XYX___SC_IOV_MAX                       = _SC_IOV_MAX;
#endif
#ifdef _SC_T_IOV_MAX
    enum __XYX___SC_T_IOV_MAX                     = _SC_T_IOV_MAX;
#endif

    enum __XYX___SC_ARG_MAX                       = _SC_ARG_MAX;
    enum __XYX___SC_CHILD_MAX                     = _SC_CHILD_MAX;
    enum __XYX___SC_CLK_TCK                       = _SC_CLK_TCK;
    enum __XYX___SC_NGROUPS_MAX                   = _SC_NGROUPS_MAX;
    enum __XYX___SC_OPEN_MAX                      = _SC_OPEN_MAX;
    enum __XYX___SC_STREAM_MAX                    = _SC_STREAM_MAX;
    enum __XYX___SC_TZNAME_MAX                    = _SC_TZNAME_MAX;
    enum __XYX___SC_JOB_CONTROL                   = _SC_JOB_CONTROL;
    enum __XYX___SC_SAVED_IDS                     = _SC_SAVED_IDS;
    enum __XYX___SC_REALTIME_SIGNALS              = _SC_REALTIME_SIGNALS;
    enum __XYX___SC_PRIORITY_SCHEDULING           = _SC_PRIORITY_SCHEDULING;
    enum __XYX___SC_TIMERS                        = _SC_TIMERS;
    enum __XYX___SC_ASYNCHRONOUS_IO               = _SC_ASYNCHRONOUS_IO;
    enum __XYX___SC_PRIORITIZED_IO                = _SC_PRIORITIZED_IO;
    enum __XYX___SC_SYNCHRONIZED_IO               = _SC_SYNCHRONIZED_IO;
    enum __XYX___SC_FSYNC                         = _SC_FSYNC;
    enum __XYX___SC_MAPPED_FILES                  = _SC_MAPPED_FILES;
    enum __XYX___SC_MEMLOCK                       = _SC_MEMLOCK;
    enum __XYX___SC_MEMLOCK_RANGE                 = _SC_MEMLOCK_RANGE;
    enum __XYX___SC_MEMORY_PROTECTION             = _SC_MEMORY_PROTECTION;
    enum __XYX___SC_MESSAGE_PASSING               = _SC_MESSAGE_PASSING;
    enum __XYX___SC_SEMAPHORES                    = _SC_SEMAPHORES;
    enum __XYX___SC_SHARED_MEMORY_OBJECTS         = _SC_SHARED_MEMORY_OBJECTS;
    enum __XYX___SC_AIO_LISTIO_MAX                = _SC_AIO_LISTIO_MAX;
    enum __XYX___SC_AIO_MAX                       = _SC_AIO_MAX;
    enum __XYX___SC_AIO_PRIO_DELTA_MAX            = _SC_AIO_PRIO_DELTA_MAX;
    enum __XYX___SC_DELAYTIMER_MAX                = _SC_DELAYTIMER_MAX;
    enum __XYX___SC_MQ_OPEN_MAX                   = _SC_MQ_OPEN_MAX;
    enum __XYX___SC_MQ_PRIO_MAX                   = _SC_MQ_PRIO_MAX;
    enum __XYX___SC_VERSION                       = _SC_VERSION;
    enum __XYX___SC_PAGESIZE                      = _SC_PAGESIZE;
    enum __XYX___SC_PAGE_SIZE                     = _SC_PAGE_SIZE;
    enum __XYX___SC_RTSIG_MAX                     = _SC_RTSIG_MAX;
    enum __XYX___SC_SEM_NSEMS_MAX                 = _SC_SEM_NSEMS_MAX;
    enum __XYX___SC_SEM_VALUE_MAX                 = _SC_SEM_VALUE_MAX;
    enum __XYX___SC_SIGQUEUE_MAX                  = _SC_SIGQUEUE_MAX;
    enum __XYX___SC_TIMER_MAX                     = _SC_TIMER_MAX;

    enum __XYX___SC_BC_BASE_MAX                   = _SC_BC_BASE_MAX;
    enum __XYX___SC_BC_DIM_MAX                    = _SC_BC_DIM_MAX;
    enum __XYX___SC_BC_SCALE_MAX                  = _SC_BC_SCALE_MAX;
    enum __XYX___SC_BC_STRING_MAX                 = _SC_BC_STRING_MAX;
    enum __XYX___SC_COLL_WEIGHTS_MAX              = _SC_COLL_WEIGHTS_MAX;
#ifdef _SC_EQUIV_CLASS_MAX
    enum __XYX___SC_EQUIV_CLASS_MAX               = _SC_EQUIV_CLASS_MAX;
#endif
    enum __XYX___SC_EXPR_NEST_MAX                 = _SC_EXPR_NEST_MAX;
    enum __XYX___SC_LINE_MAX                      = _SC_LINE_MAX;
    enum __XYX___SC_RE_DUP_MAX                    = _SC_RE_DUP_MAX;
#ifdef _SC_CHARCLASS_NAME_MAX
    enum __XYX___SC_CHARCLASS_NAME_MAX            = _SC_CHARCLASS_NAME_MAX;
#endif

    enum __XYX___SC_2_VERSION                     = _SC_2_VERSION;
    enum __XYX___SC_2_C_BIND                      = _SC_2_C_BIND;
    enum __XYX___SC_2_C_DEV                       = _SC_2_C_DEV;
    enum __XYX___SC_2_FORT_DEV                    = _SC_2_FORT_DEV;
    enum __XYX___SC_2_FORT_RUN                    = _SC_2_FORT_RUN;
    enum __XYX___SC_2_SW_DEV                      = _SC_2_SW_DEV;
    enum __XYX___SC_2_LOCALEDEF                   = _SC_2_LOCALEDEF;

    enum __XYX___SC_THREADS                       = _SC_THREADS;
    enum __XYX___SC_THREAD_SAFE_FUNCTIONS         = _SC_THREAD_SAFE_FUNCTIONS;
    enum __XYX___SC_GETGR_R_SIZE_MAX              = _SC_GETGR_R_SIZE_MAX;
    enum __XYX___SC_GETPW_R_SIZE_MAX              = _SC_GETPW_R_SIZE_MAX;
    enum __XYX___SC_LOGIN_NAME_MAX                = _SC_LOGIN_NAME_MAX;
    enum __XYX___SC_TTY_NAME_MAX                  = _SC_TTY_NAME_MAX;
    enum __XYX___SC_THREAD_DESTRUCTOR_ITERATIONS  = _SC_THREAD_DESTRUCTOR_ITERATIONS;
    enum __XYX___SC_THREAD_KEYS_MAX               = _SC_THREAD_KEYS_MAX;
    enum __XYX___SC_THREAD_STACK_MIN              = _SC_THREAD_STACK_MIN;
    enum __XYX___SC_THREAD_THREADS_MAX            = _SC_THREAD_THREADS_MAX;
    enum __XYX___SC_THREAD_ATTR_STACKADDR         = _SC_THREAD_ATTR_STACKADDR;
    enum __XYX___SC_THREAD_ATTR_STACKSIZE         = _SC_THREAD_ATTR_STACKSIZE;
    enum __XYX___SC_THREAD_PRIORITY_SCHEDULING    = _SC_THREAD_PRIORITY_SCHEDULING;
    enum __XYX___SC_THREAD_PRIO_INHERIT           = _SC_THREAD_PRIO_INHERIT;
    enum __XYX___SC_THREAD_PRIO_PROTECT           = _SC_THREAD_PRIO_PROTECT;
    enum __XYX___SC_THREAD_PROCESS_SHARED         = _SC_THREAD_PROCESS_SHARED;

    enum __XYX___SC_NPROCESSORS_CONF              = _SC_NPROCESSORS_CONF;
    enum __XYX___SC_NPROCESSORS_ONLN              = _SC_NPROCESSORS_ONLN;
#ifdef _SC_PHYS_PAGES
    enum __XYX___SC_PHYS_PAGES                    = _SC_PHYS_PAGES;
#endif
#ifdef _SC_AVPHYS_PAGES
    enum __XYX___SC_AVPHYS_PAGES                  = _SC_AVPHYS_PAGES;
#endif
    enum __XYX___SC_ATEXIT_MAX                    = _SC_ATEXIT_MAX;
    enum __XYX___SC_PASS_MAX                      = _SC_PASS_MAX;

    enum __XYX___SC_XOPEN_VERSION                 = _SC_XOPEN_VERSION;
    enum __XYX___SC_XOPEN_XCU_VERSION             = _SC_XOPEN_XCU_VERSION;
    enum __XYX___SC_XOPEN_UNIX                    = _SC_XOPEN_UNIX;
    enum __XYX___SC_XOPEN_CRYPT                   = _SC_XOPEN_CRYPT;
    enum __XYX___SC_XOPEN_ENH_I18N                = _SC_XOPEN_ENH_I18N;
    enum __XYX___SC_XOPEN_SHM                     = _SC_XOPEN_SHM;

    enum __XYX___SC_2_CHAR_TERM                   = _SC_2_CHAR_TERM;
#ifdef _SC_2_C_VERSION
    enum __XYX___SC_2_C_VERSION                   = _SC_2_C_VERSION;
#endif
    enum __XYX___SC_2_UPE                         = _SC_2_UPE;

#ifdef _SC_XOPEN_XPG2
    enum __XYX___SC_XOPEN_XPG2                    = _SC_XOPEN_XPG2;
    enum __XYX___SC_XOPEN_XPG3                    = _SC_XOPEN_XPG3;
    enum __XYX___SC_XOPEN_XPG4                    = _SC_XOPEN_XPG4;
#endif

#ifdef _SC_CHAR_BIT
    enum __XYX___SC_CHAR_BIT                      = _SC_CHAR_BIT;
    enum __XYX___SC_CHAR_MAX                      = _SC_CHAR_MAX;
    enum __XYX___SC_CHAR_MIN                      = _SC_CHAR_MIN;
    enum __XYX___SC_INT_MAX                       = _SC_INT_MAX;
    enum __XYX___SC_INT_MIN                       = _SC_INT_MIN;
    enum __XYX___SC_LONG_BIT                      = _SC_LONG_BIT;
    enum __XYX___SC_WORD_BIT                      = _SC_WORD_BIT;
    enum __XYX___SC_MB_LEN_MAX                    = _SC_MB_LEN_MAX;
    enum __XYX___SC_NZERO                         = _SC_NZERO;
    enum __XYX___SC_SSIZE_MAX                     = _SC_SSIZE_MAX;
    enum __XYX___SC_SCHAR_MAX                     = _SC_SCHAR_MAX;
    enum __XYX___SC_SCHAR_MIN                     = _SC_SCHAR_MIN;
    enum __XYX___SC_SHRT_MAX                      = _SC_SHRT_MAX;
    enum __XYX___SC_SHRT_MIN                      = _SC_SHRT_MIN;
    enum __XYX___SC_UCHAR_MAX                     = _SC_UCHAR_MAX;
    enum __XYX___SC_UINT_MAX                      = _SC_UINT_MAX;
    enum __XYX___SC_ULONG_MAX                     = _SC_ULONG_MAX;
    enum __XYX___SC_USHRT_MAX                     = _SC_USHRT_MAX;
#endif

#ifdef _SC_NL_ARGMAX
    enum __XYX___SC_NL_ARGMAX                     = _SC_NL_ARGMAX;
    enum __XYX___SC_NL_LANGMAX                    = _SC_NL_LANGMAX;
    enum __XYX___SC_NL_MSGMAX                     = _SC_NL_MSGMAX;
    enum __XYX___SC_NL_NMAX                       = _SC_NL_NMAX;
    enum __XYX___SC_NL_SETMAX                     = _SC_NL_SETMAX;
    enum __XYX___SC_NL_TEXTMAX                    = _SC_NL_TEXTMAX;
#endif

    enum __XYX___SC_XBS5_ILP32_OFF32              = _SC_XBS5_ILP32_OFF32;
    enum __XYX___SC_XBS5_ILP32_OFFBIG             = _SC_XBS5_ILP32_OFFBIG;
    enum __XYX___SC_XBS5_LP64_OFF64               = _SC_XBS5_LP64_OFF64;
    enum __XYX___SC_XBS5_LPBIG_OFFBIG             = _SC_XBS5_LPBIG_OFFBIG;

    enum __XYX___SC_XOPEN_LEGACY                  = _SC_XOPEN_LEGACY;
    enum __XYX___SC_XOPEN_REALTIME                = _SC_XOPEN_REALTIME;
    enum __XYX___SC_XOPEN_REALTIME_THREADS        = _SC_XOPEN_REALTIME_THREADS;

    enum __XYX___SC_ADVISORY_INFO                 = _SC_ADVISORY_INFO;
    enum __XYX___SC_BARRIERS                      = _SC_BARRIERS;
#ifdef _SC_BASE
    enum __XYX___SC_BASE                          = _SC_BASE;
#endif
#ifdef _SC_C_LANG_SUPPORT
    enum __XYX___SC_C_LANG_SUPPORT                = _SC_C_LANG_SUPPORT;
#endif
#ifdef _SC_C_LANG_SUPPORT_R
    enum __XYX___SC_C_LANG_SUPPORT_R              = _SC_C_LANG_SUPPORT_R;
#endif
    enum __XYX___SC_CLOCK_SELECTION               = _SC_CLOCK_SELECTION;
    enum __XYX___SC_CPUTIME                       = _SC_CPUTIME;
    enum __XYX___SC_THREAD_CPUTIME                = _SC_THREAD_CPUTIME;
#ifdef _SC_DEVICE_IO
    enum __XYX___SC_DEVICE_IO                     = _SC_DEVICE_IO;
#endif
#ifdef _SC_DEVICE_SPECIFIC
    enum __XYX___SC_DEVICE_SPECIFIC               = _SC_DEVICE_SPECIFIC;
#endif
#ifdef _SC_DEVICE_SPECIFIC_R
    enum __XYX___SC_DEVICE_SPECIFIC_R             = _SC_DEVICE_SPECIFIC_R;
#endif
#ifdef _SC_FD_MGMT
    enum __XYX___SC_FD_MGMT                       = _SC_FD_MGMT;
#endif
#ifdef _SC_FIFO
    enum __XYX___SC_FIFO                          = _SC_FIFO;
#endif
#ifdef _SC_PIPE
    enum __XYX___SC_PIPE                          = _SC_PIPE;
#endif
#ifdef _SC_PIPE
    enum __XYX___SC_FILE_ATTRIBUTES               = _SC_FILE_ATTRIBUTES;
#endif
#ifdef _SC_FILE_LOCKING
    enum __XYX___SC_FILE_LOCKING                  = _SC_FILE_LOCKING;
#endif
#ifdef _SC_FILE_SYSTEM
    enum __XYX___SC_FILE_SYSTEM                   = _SC_FILE_SYSTEM;
#endif
    enum __XYX___SC_MONOTONIC_CLOCK               = _SC_MONOTONIC_CLOCK;
#ifdef _SC_MULTI_PROCESS
    enum __XYX___SC_MULTI_PROCESS                 = _SC_MULTI_PROCESS;
#endif
#ifdef _SC_SINGLE_PROCESS
    enum __XYX___SC_SINGLE_PROCESS                = _SC_SINGLE_PROCESS;
#endif
#ifdef _SC_NETWORKING
    enum __XYX___SC_NETWORKING                    = _SC_NETWORKING;
#endif
    enum __XYX___SC_READER_WRITER_LOCKS           = _SC_READER_WRITER_LOCKS;
    enum __XYX___SC_SPIN_LOCKS                    = _SC_SPIN_LOCKS;
    enum __XYX___SC_REGEXP                        = _SC_REGEXP;
#ifdef _SC_REGEX_VERSION
    enum __XYX___SC_REGEX_VERSION                 = _SC_REGEX_VERSION;
#endif
    enum __XYX___SC_SHELL                         = _SC_SHELL;
#ifdef _SC_SIGNALS
    enum __XYX___SC_SIGNALS                       = _SC_SIGNALS;
#endif
    enum __XYX___SC_SPAWN                         = _SC_SPAWN;
    enum __XYX___SC_SPORADIC_SERVER               = _SC_SPORADIC_SERVER;
    enum __XYX___SC_THREAD_SPORADIC_SERVER        = _SC_THREAD_SPORADIC_SERVER;
#ifdef _SC_SYSTEM_DATABASE
    enum __XYX___SC_SYSTEM_DATABASE               = _SC_SYSTEM_DATABASE;
#endif
#ifdef _SC_SYSTEM_DATABASE_R
    enum __XYX___SC_SYSTEM_DATABASE_R             = _SC_SYSTEM_DATABASE_R;
#endif
    enum __XYX___SC_TIMEOUTS                      = _SC_TIMEOUTS;
    enum __XYX___SC_TYPED_MEMORY_OBJECTS          = _SC_TYPED_MEMORY_OBJECTS;
#ifdef _SC_USER_GROUPS
    enum __XYX___SC_USER_GROUPS                   = _SC_USER_GROUPS;
#endif
#ifdef _SC_USER_GROUPS_R
    enum __XYX___SC_USER_GROUPS_R                 = _SC_USER_GROUPS_R;
#endif
    enum __XYX___SC_2_PBS                         = _SC_2_PBS;
    enum __XYX___SC_2_PBS_ACCOUNTING              = _SC_2_PBS_ACCOUNTING;
    enum __XYX___SC_2_PBS_LOCATE                  = _SC_2_PBS_LOCATE;
    enum __XYX___SC_2_PBS_MESSAGE                 = _SC_2_PBS_MESSAGE;
    enum __XYX___SC_2_PBS_TRACK                   = _SC_2_PBS_TRACK;
    enum __XYX___SC_SYMLOOP_MAX                   = _SC_SYMLOOP_MAX;
#ifdef _SC_STREAMS
    enum __XYX___SC_STREAMS                       = _SC_STREAMS;
#endif
    enum __XYX___SC_2_PBS_CHECKPOINT              = _SC_2_PBS_CHECKPOINT;

    enum __XYX___SC_V6_ILP32_OFF32                = _SC_V6_ILP32_OFF32;
    enum __XYX___SC_V6_ILP32_OFFBIG               = _SC_V6_ILP32_OFFBIG;
    enum __XYX___SC_V6_LP64_OFF64                 = _SC_V6_LP64_OFF64;
    enum __XYX___SC_V6_LPBIG_OFFBIG               = _SC_V6_LPBIG_OFFBIG;

    enum __XYX___SC_HOST_NAME_MAX                 = _SC_HOST_NAME_MAX;
    enum __XYX___SC_TRACE                         = _SC_TRACE;
    enum __XYX___SC_TRACE_EVENT_FILTER            = _SC_TRACE_EVENT_FILTER;
    enum __XYX___SC_TRACE_INHERIT                 = _SC_TRACE_INHERIT;
    enum __XYX___SC_TRACE_LOG                     = _SC_TRACE_LOG;

#ifdef _SC_LEVEL1_ICACHE_SIZE
    enum __XYX___SC_LEVEL1_ICACHE_SIZE            = _SC_LEVEL1_ICACHE_SIZE;
    enum __XYX___SC_LEVEL1_ICACHE_ASSOC           = _SC_LEVEL1_ICACHE_ASSOC;
    enum __XYX___SC_LEVEL1_ICACHE_LINESIZE        = _SC_LEVEL1_ICACHE_LINESIZE;
    enum __XYX___SC_LEVEL1_DCACHE_SIZE            = _SC_LEVEL1_DCACHE_SIZE;
    enum __XYX___SC_LEVEL1_DCACHE_ASSOC           = _SC_LEVEL1_DCACHE_ASSOC;
    enum __XYX___SC_LEVEL1_DCACHE_LINESIZE        = _SC_LEVEL1_DCACHE_LINESIZE;
    enum __XYX___SC_LEVEL2_CACHE_SIZE             = _SC_LEVEL2_CACHE_SIZE;
    enum __XYX___SC_LEVEL2_CACHE_ASSOC            = _SC_LEVEL2_CACHE_ASSOC;
    enum __XYX___SC_LEVEL2_CACHE_LINESIZE         = _SC_LEVEL2_CACHE_LINESIZE;
    enum __XYX___SC_LEVEL3_CACHE_SIZE             = _SC_LEVEL3_CACHE_SIZE;
    enum __XYX___SC_LEVEL3_CACHE_ASSOC            = _SC_LEVEL3_CACHE_ASSOC;
    enum __XYX___SC_LEVEL3_CACHE_LINESIZE         = _SC_LEVEL3_CACHE_LINESIZE;
    enum __XYX___SC_LEVEL4_CACHE_SIZE             = _SC_LEVEL4_CACHE_SIZE;
    enum __XYX___SC_LEVEL4_CACHE_ASSOC            = _SC_LEVEL4_CACHE_ASSOC;
    enum __XYX___SC_LEVEL4_CACHE_LINESIZE         = _SC_LEVEL4_CACHE_LINESIZE;
#endif

    enum __XYX___SC_IPV6                          = _SC_IPV6;
    enum __XYX___SC_RAW_SOCKETS                   = _SC_RAW_SOCKETS;

#endif // UNISTD_SKIP_ALL